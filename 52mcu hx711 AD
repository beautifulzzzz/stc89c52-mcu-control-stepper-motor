/*-------------------------------------------
简单的串口通信
-------------------------------------------*/
#include<reg51.h>

#define uint unsigned int
#define uchar unsigned char

sbit ADDO = P1^5;
sbit ADSK = P0^0;

uchar flag,a,i;                    //标志接收串口中断标志，接收SBUF内容
uchar table[26];
/*--------------------------------------------
延时函数 
---------------------------------------------*/
void delay_ms(uint z)        
{
    uint y;
    while(z--)
        for(y=110;y>0;y--);
}
/*--------------------------------------------
USAR初始函数 
---------------------------------------------*/
void USRT_init()
{
    TMOD=0x20;            //设置T1定时器工作方式2
    TH1=0xfd;            //T1定时器装初值
    TL1=0xfd;
    TR1=1;                //启动T1定时器
    REN=1;                //允许串口中断接收
    SM0=0;                //设定串口工作方式
    SM1=1;
    EA=1;                //开总中断
    ES=1;                //开串口中断
}
/*--------------------------------------------
串口中断程序
---------------------------------------------*/
void ser()interrupt 4
{
    RI=0;
    a=SBUF;
    flag=1;
}
/*--------------------------------------------
读取重力信息
---------------------------------------------*/
unsigned long ReadCount(void)
{
	unsigned long Count;
	unsigned char i;
	ADSK=0;
	Count=0;
	while(ADDO);
	for (i=0;i<24;i++){
		ADSK=1;
		Count=Count<<1;
		ADSK=0;
		if(ADDO) 
		{
			Count++;
			table[i]='1';
		}
		else
		{
			table[i]='0';
		}
	}
	table[24]=0x0d;
	table[25]=0x0a;
	ADSK=1;
	if(table[0]=='1')table[0]='0';
	else table[0]='1';
	Count=Count^0x800000;
	ADSK=0;
	return(Count);
}
/*--------------------------------------------
主函数
---------------------------------------------*/
void main()
{
    USRT_init();
    while(1)
    {
        if(flag==1)                //检测到串口中断。表示有数据传过来了
        {
			ReadCount();
            ES=0;                //关闭串口中断，接下来要发送数据，如果不关闭每次发送之后串口中断都会执行又进入if(flag==1)那里，然后死循环
            for(i=0;i<26;i++)    //将table[]中的前6个发送出去
            {
                SBUF=table[i];
                while(!TI);        //每次等待发送完毕，再执行下一条
                TI=0;            //手动清0
            }
            SBUF=a;                //将收到的数据发送出去
            while(!TI);
            TI=0;
            ES=1;
            flag=0;
        }
    }
}

